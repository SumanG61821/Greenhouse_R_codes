---
title: "Program to generate experimental design"
library(tidyverse)
library(randtoolbox)
library(DoE.base)
library(randtoolbox)
library(MaxPro)
library(SLHD)
library(caret)
library(gbm)
library(MASS)
library(MOLHD)
library(earth)
library(MLmetrics)
library(rio)
library(plyr)
library(glinternet)
library(dummy)
library(gglasso)
library(stringr)
library(paramtest)
library(fastDummies)
data <- read_csv('./data/config_params.csv',show_col_types = FALSE)
cat("OPtions choosen are: \n\n")
#write.table(data)
print.data.frame(data,, digits = NULL, quote = FALSE, right = FALSE, row.names = TRUE)
data
data = data[2]
oaarray<-data[1, 1]
ncont<-as.integer(data[2, 1])
ncateg2<-as.integer(data[3, 1])
ncateg3<-as.integer(data[4, 1])
ncateg4<-as.integer(data[5, 1])
ncateg5<-as.integer(data[6, 1])
ncateg6<-as.integer(data[7, 1])
ncateg7<-as.integer(data[8, 1])
ncateg8<-as.integer(data[9, 1])
ncateg9<-as.integer(data[10, 1])
kung_flag<-as.integer(data[11, 1])
KungMP_flag<-as.integer(data[12, 1])
KungSLHD_flag<-as.integer(data[13, 1])
MaxProQQ_flag<-as.integer(data[14, 1])
Martinez_flag<-as.integer(data[15, 1])
# getting list of OAs
#L18.3.6.6.1 is an 18 run design with six factors in 3 levels (3.6) and one factor in 6 levels (6.1)
catarray_vec = c(ncateg2,ncateg3,ncateg4,ncateg5,ncateg6,ncateg7,ncateg8,ncateg9)
levelarray_vec = c(2,3,4,5,6,7,8,9)
#t<-show.oas(nruns=c(nruns,round(1.5*nruns)),factors = list(nlevels=levelarray_vec,number=catarray_vec))
t<-show.oas(nruns=c(0,2000),factors = list(nlevels=levelarray_vec,number=catarray_vec))
t<-t[order(t$nruns),]
print.data.frame(t,, digits = NULL, quote = FALSE, right = FALSE, row.names = TRUE)
if (oaarray == 'default'){
design_oa_var <-paste("oa1<-oa.design(ID=", t$name[1+ncont*4],")", sep = "", collapse=NULL)
} else if (oaarray == 'manual')
{
design_oa_var <-paste("oa1<-oa.design(ID=",'your OA string' ,")", sep = "", collapse=NULL)
}else if (any(t$name==oaarray)){
design_oa_var <-paste("oa1<-oa.design(ID=",oaarray ,")", sep = "", collapse=NULL)
}else
{
print("Invalid OA option or OA given does not exist for given set of values")
}
eval(parse(text = design_oa_var))
#Or you can use below code by commenting above line if input OA value does not work.
#oa1<-oa.design(ID='')
oa1
# Converting to factor
oa1[] <- lapply( oa1, factor)
# Getting attributes of OA1
nlevel_oa1<-attributes(oa1)$design.info$nlevels
# Sampling 2-lvl, 3-lvl etc till 9-lvl factor levels from OA1
OA<-cbind(oa1[,sample(which(nlevel_oa1==2),ncateg2)],oa1[,sample(which(nlevel_oa1==3),ncateg3)])
OA<-cbind(OA,oa1[,sample(which(nlevel_oa1==4),ncateg4)],oa1[,sample(which(nlevel_oa1==5),ncateg5)])
OA<-cbind(OA,oa1[,sample(which(nlevel_oa1==6),ncateg6)],oa1[,sample(which(nlevel_oa1==7),ncateg7)])
OA<-cbind(OA,oa1[,sample(which(nlevel_oa1==8),ncateg8)],oa1[,sample(which(nlevel_oa1==9),ncateg9)])
OA
if(kung_flag == 1)
{
######### Kung Design ############################
# Sobol sequence for numerical variables
cont<- as.data.frame(sobol(nrow(OA),ncont))
lhd<-as.data.frame(maximinSLHD(1,nrow(OA),2)[[1]])
contk<- cont[lhd[,1],]
categk<- OA[lhd[,2],]
# Generated Kung Design ###############################
kung<- cbind(contk,categk)
write_csv(kung, file ='./results/csvs/kung_design.csv')
}
if(KungMP_flag == 1)
{
##### KungMP design #########
cont<-as.data.frame(MaxProLHD(nrow(OA),ncont)[[1]])
#lhd<-as.data.frame(LHDesign(nrow(categ),2))
lhd<-as.data.frame(maximinSLHD(1,nrow(OA),2)[[1]])
## Generated KungMP design ######
kungMP<- cbind(cont[lhd[,1],],OA[lhd[,2],])
write_csv(kungMP, file ='./results/csvs/kungMP_design.csv')
}
if(KungSLHD_flag == 1)
{
##### KungSLHD design #########
cont<- as.data.frame(maximinSLHD(2,nrow(OA)/2,ncont)[[3]])
cont<-cont[,-1]
lhd<-as.data.frame(maximinSLHD(1,nrow(OA),2)[[1]])
### Generated KungSLHD design ########
kungSLHD<- cbind(cont[lhd[,1],],OA[lhd[,2],])
write_csv(kungSLHD, file ='./results/csvs/kungSLHD_design.csv')
}
if(MaxProQQ_flag == 1)
{
#Max Pro QQ
cont<-maximinSLHD(1,nrow(OA),ncont)[[3]]
cmb<- cbind(cont,OA)
ncat<-ncateg2+ncateg4
mpd<-as.data.frame(MaxProQQ(cmb,p_nom = ncat)[[1]])
mpd[,(ncont+1):ncol(mpd)]<-lapply(mpd[,(ncont+1):ncol(mpd)],factor)
#### Generated MaxproQQ design ###
maxproQQ<-mpd
write_csv(maxproQQ, file ='./results/csvs/maxproQQ_design.csv')
}
if(Martinez_flag == 1)
{
######### Martinez Design ############################
totalcol<-ncont+ntwo+3*nfour
rcol<-ntwo+3*nfour
# Sobol sequence for numerical variables
cont<- sobol(nrow(oa),totalcol)
cont<-cont[,sample(1:ncol(cont),ncol(cont))]
cont<- as.data.frame(sobol(nrow(OA),ncont))
martinez_rounding<-rm_modified(cont[,seq(ncol(cont)-rcol+1,ncol(cont))],ntwo,nfour)
martinez_rounding[,1:ncol(martinez_rounding)]<-lapply(martinez_rounding[,1:ncol(martinez_rounding)],factor)
# Generated Kung Design ###############################
martinez<-cbind(cont[,1:ncont],martinez_rounding)
write_csv(kung, file ='./results/csvs/martinez_design.csv')
if(Martinez_flag == 1)
{
######### Martinez Design ############################
totalcol<-ncont+ntwo+3*nfour
rcol<-ntwo+3*nfour
# Sobol sequence for numerical variables
cont<- sobol(nrow(oa),totalcol)
cont<-cont[,sample(1:ncol(cont),ncol(cont))]
cont<- as.data.frame(sobol(nrow(OA),ncont))
martinez_rounding<-rm_modified(cont[,seq(ncol(cont)-rcol+1,ncol(cont))],ntwo,nfour)
martinez_rounding[,1:ncol(martinez_rounding)]<-lapply(martinez_rounding[,1:ncol(martinez_rounding)],factor)
# Generated Kung Design ###############################
martinez<-cbind(cont[,1:ncont],martinez_rounding)
write_csv(kung, file ='./results/csvs/martinez_design.csv')
}
if(Martinez_flag == 1)
{
######### Martinez Design ############################
totalcol<-ncont+ncateg2+3*ncateg4
rcol<-ncateg2+3*ncateg4
# Sobol sequence for numerical variables
cont<- sobol(nrow(oa),totalcol)
cont<-cont[,sample(1:ncol(cont),ncol(cont))]
cont<- as.data.frame(sobol(nrow(OA),ncont))
martinez_rounding<-rm_modified(cont[,seq(ncol(cont)-rcol+1,ncol(cont))],ncateg2,ncateg4)
martinez_rounding[,1:ncol(martinez_rounding)]<-lapply(martinez_rounding[,1:ncol(martinez_rounding)],factor)
# Generated Kung Design ###############################
martinez<-cbind(cont[,1:ncont],martinez_rounding)
write_csv(kung, file ='./results/csvs/martinez_design.csv')
}
if(Martinez_flag == 1)
{
######### Martinez Design ############################
totalcol<-ncont+ncateg2+3*ncateg4
rcol<-ncateg2+3*ncateg4
# Sobol sequence for numerical variables
cont<- sobol(nrow(OA),totalcol)
cont<-cont[,sample(1:ncol(cont),ncol(cont))]
cont<- as.data.frame(sobol(nrow(OA),ncont))
martinez_rounding<-rm_modified(cont[,seq(ncol(cont)-rcol+1,ncol(cont))],ncateg2,ncateg4)
martinez_rounding[,1:ncol(martinez_rounding)]<-lapply(martinez_rounding[,1:ncol(martinez_rounding)],factor)
# Generated Kung Design ###############################
martinez<-cbind(cont[,1:ncont],martinez_rounding)
write_csv(kung, file ='./results/csvs/martinez_design.csv')
}
grep
